[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform vec4 line_color : hint_color = vec4(1.0);
uniform float line_thickness : hint_range(0, 10) = 1.0;

void fragment() {
	// Adjacent and diagonal neighbours.
	vec2 offsets[8];
	offsets[0] = vec2(-1, -1);
	offsets[1] = vec2(-1, 0);
	offsets[2] = vec2(-1, 1);
	offsets[3] = vec2(0, -1);
	offsets[4] = vec2(0, 1);
	offsets[5] = vec2(1, -1);
	offsets[6] = vec2(1, 0);
	offsets[7] = vec2(1, 1);
	
	vec2 size = TEXTURE_PIXEL_SIZE * line_thickness;
	float outline = 0.0;
	
	for (int i = 0; i < 8; i++) {
		outline += texture(TEXTURE, UV + size * offsets[i]).a;
	}
	
	outline = min(outline, 1.0);
	
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, line_color, outline - color.a);
}
"
